name: "Common JS Steps"
description: "Checkout code, setup Node and install dependencies using yarn"

branding:
  icon: activity
  color: gray-dark
  
inputs:
  token:
    description: 'Specify token for access to resources.'
    required: true
  
  branch:
    description: 'Branch to operate upon. Defaults to `main`'
    required: false
    default: 'main'
  
  skip-install:
    description: 'Skip installing npm dependencies ? defaults to `false`'
    required: false
    default: false

  skip-build:
    description: 'Skip the build step ? defaults to `false`'
    required: false
    default: false
  

runs:
  using: "composite"
  steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ inputs.token }}
          ref: ${{ inputs.branch }}

      - name: 'Setup Node.js'
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: 16
          registry-url: https://npm.pkg.github.com
          token: ${{ inputs.token }}
      
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        shell: bash

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-
      
      - if: ${{ steps.yarn-cache.outputs.cache-hit == false }}
        name: List the state of node modules
        continue-on-error: true
        shell: bash
        run: yarn list
            
      - name: Install npm dependencies
        run: yarn install --immutable --immutable-cache --check-cache
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' && inputs.skip-install == 'false' }}
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ inputs.token }}
        
      - name: Build
        if: ${{ inputs.skip-build == 'false' }}
        shell: bash
        run: NODE_ENV=production yarn build
